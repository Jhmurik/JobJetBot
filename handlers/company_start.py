from db import save_company  # ‚ö†Ô∏è –¥–æ–±–∞–≤–∏–º –ø–æ–∑–∂–µ
from uuid import uuid4

@router.message(CompanyStart.name)
async def company_name(message: Message, state: FSMContext):
    await state.update_data(name=message.text)
    await state.set_state(CompanyStart.description)
    await message.answer("‚úèÔ∏è –í–≤–µ–¥–∏—Ç–µ *–∫—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ* –∫–æ–º–ø–∞–Ω–∏–∏:", parse_mode="Markdown")

@router.message(CompanyStart.description)
async def company_description(message: Message, state: FSMContext):
    await state.update_data(description=message.text)
    await state.set_state(CompanyStart.country)
    await message.answer("üåç –í–≤–µ–¥–∏—Ç–µ —Å—Ç—Ä–∞–Ω—É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:")

@router.message(CompanyStart.country)
async def company_country(message: Message, state: FSMContext):
    await state.update_data(country=message.text)
    await state.set_state(CompanyStart.city)
    await message.answer("üèôÔ∏è –í–≤–µ–¥–∏—Ç–µ –≥–æ—Ä–æ–¥ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:")

@router.message(CompanyStart.city)
async def company_city(message: Message, state: FSMContext):
    await state.update_data(city=message.text)

    data = await state.get_data()
    owner_id = message.from_user.id
    company_id = str(uuid4())

    # –ü—Ä–∏–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
    company_data = {
        "id": company_id,
        "name": data["name"],
        "description": data["description"],
        "country": data["country"],
        "city": data["city"],
        "owner_id": owner_id,
    }

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–º–ø–∞–Ω–∏—é –≤ –ë–î
    app = message.bot._ctx.get("application")
    pool = app["db"]
    await save_company(pool, company_data)

    await state.clear()
    await message.answer(f"‚úÖ –ö–æ–º–ø–∞–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∞!\n\n"
                         f"–í–∞—à –∫–æ–¥ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –¥–ª—è –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤:\n\n"
                         f"<code>join_{company_id}</code>", parse_mode="HTML")
