import os
from aiohttp import web
from aiogram import Bot, Dispatcher
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.types import Message, BotCommand, BotCommandScopeDefault, MenuButtonCommands
from aiogram.filters import Command
from aiogram.webhook.aiohttp_server import SimpleRequestHandler

# üì• –ò–º–ø–æ—Ä—Ç –º–∞—Ä—à—Ä—É—Ç–æ–≤ –∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î
from handlers.driver_form import router as driver_form_router
from db import connect_to_db

# üîê –¢–æ–∫–µ–Ω –∏ Webhook –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ (—Ç–æ–∫–µ–Ω –≤—Å—Ç–∞–≤–ª–µ–Ω –≤—Ä—É—á–Ω—É—é)
TOKEN = "7883161984:AAF_T1IMahf_EYS42limVzfW-5NGuyNu0Qk"
BASE_WEBHOOK_URL = "https://jobjetbot.onrender.com"
WEBHOOK_PATH = f"/webhook/{TOKEN}"
WEBHOOK_URL = f"{BASE_WEBHOOK_URL.rstrip('/')}{WEBHOOK_PATH}"

# ü§ñ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=TOKEN)
dp = Dispatcher(storage=MemoryStorage())

# ‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –º–∞—Ä—à—Ä—É—Ç–æ–≤ (FSM –ª–æ–≥–∏–∫–∞ –∞–Ω–∫–µ—Ç—ã –≤–æ–¥–∏—Ç–µ–ª—è)
dp.include_router(driver_form_router)

# üîπ –ö–æ–º–∞–Ω–¥–∞ /start
@dp.message(Command("start"))
async def handle_start(message: Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ JobJet AI –ë–æ—Ç. –ù–∞–ø–∏—à–∏—Ç–µ '–∑–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É' –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –≤ –º–µ–Ω—é.")

# üîπ –ö–æ–º–∞–Ω–¥–∞ /company
@dp.message(Command("company"))
async def handle_company(message: Message):
    await message.answer("–†–∞–∑–¥–µ–ª –¥–ª—è –∫–æ–º–ø–∞–Ω–∏–π –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ. –û–∂–∏–¥–∞–π—Ç–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π!")

# ‚ùó –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö –ø—Ä–æ—á–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@dp.message()
async def fallback(message: Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ JobJet AI –ë–æ—Ç. –ù–∞–ø–∏—à–∏—Ç–µ '–∑–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É' –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –≤ –º–µ–Ω—é.")

# üöÄ –î–µ–π—Å—Ç–≤–∏—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
async def on_startup(app: web.Application):
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ webhook
    await bot.set_webhook(WEBHOOK_URL)

    # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    pool = await connect_to_db()
    app["db"] = pool

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–º–∞–Ω–¥ –≤ –º–µ–Ω—é
    commands = [
        BotCommand(command="start", description="–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"),
        BotCommand(command="driver", description="–ê–Ω–∫–µ—Ç–∞ –≤–æ–¥–∏—Ç–µ–ª—è"),
        BotCommand(command="company", description="–ê–Ω–∫–µ—Ç–∞ –¥–ª—è –∫–æ–º–ø–∞–Ω–∏–π")
    ]
    await bot.set_my_commands(commands, scope=BotCommandScopeDefault())
    await bot.set_chat_menu_button(menu_button=MenuButtonCommands())

# üõë –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã
async def on_shutdown(app: web.Application):
    await bot.delete_webhook()
    if "db" in app:
        await app["db"].close()

# üë∑ –°–æ–∑–¥–∞–Ω–∏–µ aiohttp-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
def create_app():
    app = web.Application()
    app["bot"] = bot

    app.on_startup.append(on_startup)
    app.on_shutdown.append(on_shutdown)

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ webhook-–∑–∞–ø—Ä–æ—Å–æ–≤
    SimpleRequestHandler(dispatcher=dp, bot=bot).register(app, path=WEBHOOK_PATH)

    # –°—Ç—Ä–∞–Ω–∏—Ü–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞
    app.router.add_get("/", lambda _: web.Response(text="JobJet AI Bot —Ä–∞–±–æ—Ç–∞–µ—Ç!"))

    return app

# üîÅ –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
if __name__ == "__main__":
    web.run_app(create_app(), port=int(os.getenv("PORT", 8000)))
