from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext
from aiogram.filters import Command
from states.company_state import CompanyStart
from keyboards.company_kb import get_company_start_keyboard

router = Router()

# üì¶ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–î–ª—è –∫–æ–º–ø–∞–Ω–∏–π"
@router.message(F.text == "üì¶ –î–ª—è –∫–æ–º–ø–∞–Ω–∏–π")
async def company_menu(message: Message, state: FSMContext):
    await state.set_state(CompanyStart.menu)
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=get_company_start_keyboard())

# üíº –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –≤–∞—Ä–∏–∞–Ω—Ç—ã
@router.callback_query(CompanyStart.menu, F.data.startswith("company_"))
async def company_menu_choice(callback: CallbackQuery, state: FSMContext):
    action = callback.data.split("_")[1]

    if action == "register":
        await callback.message.edit_text("üìù –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∫–æ–º–ø–∞–Ω–∏–∏. –í–≤–µ–¥–∏—Ç–µ *–Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏*:", parse_mode="Markdown")
        await state.set_state(CompanyStart.name)

    elif action == "join":
        await callback.message.edit_text("üîë –í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –æ—Ç –∫–æ–º–ø–∞–Ω–∏–∏:")
        await state.set_state(CompanyStart.join_code)
