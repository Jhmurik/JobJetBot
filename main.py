import asyncio
import os
import asyncpg
from aiohttp import web
from aiogram import Bot, Dispatcher
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.types import Message
from aiogram.webhook.aiohttp_server import SimpleRequestHandler
from contextlib import asynccontextmanager

# –ò–º–ø–æ—Ä—Ç –º–∞—Ä—à—Ä—É—Ç–æ–≤ –∞–Ω–∫–µ—Ç—ã
from handlers.driver_form import router as driver_form_router

# üîê –¢–æ–∫–µ–Ω –∏ URL Webhook
TOKEN = "7883161984:AAF_T1IMahf_EYS42limVzfW-5NGuyNu0Qk"
WEBHOOK_PATH = f"/webhook/{TOKEN}"
BASE_WEBHOOK_URL = os.getenv("WEBHOOK_BASE_URL")  # –ü—Ä–∏–º–µ—Ä: https://jobjetbot.onrender.com
WEBHOOK_URL = f"{BASE_WEBHOOK_URL}{WEBHOOK_PATH}"

# –°–æ–∑–¥–∞–Ω–∏–µ –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=TOKEN)
dp = Dispatcher(storage=MemoryStorage())

# –•—ç–Ω–¥–ª–µ—Ä –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
@dp.message()
async def echo_handler(message: Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ JobJet –±–æ—Ç. –ù–∞–ø–∏—à–∏ '–∑–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É' –¥–ª—è –Ω–∞—á–∞–ª–∞.")

# –ñ–∏–∑–Ω–µ–Ω–Ω—ã–π —Ü–∏–∫–ª: –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
@asynccontextmanager
async def lifespan(app):
    db_url = os.getenv("DATABASE_URL")  # –ü—Ä–∏–º–µ—Ä: postgres://user:pass@host:port/dbname
    pool = await asyncpg.create_pool(dsn=db_url)
    app["db"] = pool
    yield
    await pool.close()

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ webhook –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
async def on_startup(app: web.Application):
    await bot.set_webhook(WEBHOOK_URL)

# –£–¥–∞–ª–µ–Ω–∏–µ webhook –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ
async def on_shutdown(app: web.Application):
    await bot.delete_webhook()

# –û—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
def create_app():
    app = web.Application()
    app["bot"] = bot

    # –ó–∞–ø—É—Å–∫/–æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤–µ–±—Ö—É–∫–∞
    app.on_startup.append(on_startup)
    app.on_shutdown.append(on_shutdown)

    # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –º–∞—Ä—à—Ä—É—Ç–æ–≤ FSM
    dp.include_router(driver_form_router)

    # Webhook handler
    SimpleRequestHandler(dispatcher=dp, bot=bot).register(app, path=WEBHOOK_PATH)

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –ø–æ –∫–æ—Ä–Ω–µ–≤–æ–º—É –ø—É—Ç–∏
    app.router.add_get("/", lambda _: web.Response(text="JobJet AI Bot —Ä–∞–±–æ—Ç–∞–µ—Ç!"))

    return app

# –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
if __name__ == "__main__":
    web.run_app(create_app(), port=int(os.getenv("PORT", 8000)))
