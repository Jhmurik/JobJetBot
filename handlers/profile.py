from aiogram import Router, F
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton
from asyncpg import Pool

router = Router()

# üë§ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç –≤–æ–¥–∏—Ç–µ–ª—è
@router.message(F.text == "üë§ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç")
async def show_profile(message: Message):
    user_id = message.from_user.id
    app = message.bot._ctx.get("application")
    pool: Pool = app["db"]

    async with pool.acquire() as conn:
        driver = await conn.fetchrow("SELECT * FROM drivers WHERE id = $1", user_id)
        if driver:
            premium = await conn.fetchval("""
                SELECT TRUE FROM payments
                WHERE user_id = $1 AND role = 'driver' AND payment_type = 'premium'
                ORDER BY created_at DESC LIMIT 1
            """, user_id)

            text = (
                f"üë§ <b>–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å (–í–æ–¥–∏—Ç–µ–ª—å)</b>\n"
                f"üë®‚Äçüöí –ò–º—è: {driver['full_name']}\n"
                f"üöó –¢–∏–ø –¢–°: {driver['truck_type'] or '‚Äî'}\n"
                f"‚è≥ –û–ø—ã—Ç: {driver['experience'] or '‚Äî'}\n"
                f"üåç –†–µ–≥–∏–æ–Ω—ã: {', '.join(driver['regions'] or [])}\n"
                f"üåê –ü–æ–¥–ø–∏—Å–∫–∞: {'–∞–∫—Ç–∏–≤–Ω–∞ ‚úÖ' if premium else '–Ω–µ–∞–∫—Ç–∏–≤–Ω–∞ ‚ùå'}"
            )

            kb = ReplyKeyboardMarkup(
                keyboard=[
                    [KeyboardButton(text="üßæ –ú–æ—è –∞–Ω–∫–µ—Ç–∞"), KeyboardButton(text="üí≥ –ü–æ–¥–ø–∏—Å–∫–∞")],
                    [KeyboardButton(text="üéÅ –ë–æ–Ω—É—Å—ã –∏ —Å–∫–∏–¥–∫–∏")],
                    [KeyboardButton(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"), KeyboardButton(text="üåê –°–º–µ–Ω–∏—Ç—å —è–∑—ã–∫")]
                ],
                resize_keyboard=True
            )

            await message.answer(text, reply_markup=kb, parse_mode="HTML")
        else:
            await message.answer("‚ùå –ü—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –∞–Ω–∫–µ—Ç—É.")

# üéÅ –ü–æ–ª–µ–∑–Ω—ã–µ –±–æ–Ω—É—Å—ã –∏ —Å—Å—ã–ª–∫–∏
@router.message(F.text == "üéÅ –ë–æ–Ω—É—Å—ã –∏ —Å–∫–∏–¥–∫–∏")
async def show_bonuses(message: Message):
    bonuses = [
        ("WhiteBird", "https://whitebird.io/?refid=jEYdB", "–ü–µ—Ä–µ–≤–æ–¥—ã, –æ–±–º–µ–Ω, –∫—Ä–∏–ø—Ç–∞ ‚Äî –±—ã—Å—Ç—Ä–æ –∏ –≤—ã–≥–æ–¥–Ω–æ"),
        ("PaySend", "https://paysend.com/referral/05ql7b", "–ú–≥–Ω–æ–≤–µ–Ω–Ω—ã–µ –ø–µ—Ä–µ–≤–æ–¥—ã —Å –∫–∞—Ä—Ç—ã –Ω–∞ –∫–∞—Ä—Ç—É –ø–æ –≤—Å–µ–º—É –º–∏—Ä—É"),
        ("OKX", "https://okx.com/join/72027985", "–ù–∞–¥—ë–∂–Ω–∞—è –∫—Ä–∏–ø—Ç–æ–±–∏—Ä–∂–∞ —Å –±–æ–Ω—É—Å–∞–º–∏ –∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é"),
        ("Cryptomus", "https://app.cryptomus.com/signup?ref=wxkylP", "–ü–ª–∞—Ç—ë–∂–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è –∫—Ä–∏–ø—Ç—ã –∏ –±–∏–∑–Ω–µ—Å–∞")
    ]

    buttons = [
        [InlineKeyboardButton(text=f"{name} ‚Üí", url=url)]
        for name, url, desc in bonuses
    ]

    await message.answer(
        "üéÅ <b>–ü–æ–ª–µ–∑–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã —Å –±–æ–Ω—É—Å–∞–º–∏:</b>\n\n" + "\n".join(
            [f"‚Ä¢ <b>{name}</b>: {desc}" for name, url, desc in bonuses]
        ),
        reply_markup=InlineKeyboardMarkup(inline_keyboard=buttons),
        parse_mode="HTML"
    )
