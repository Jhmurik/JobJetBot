from aiogram import Router, F from aiogram.types import Message, CallbackQuery from aiogram.filters import Command from aiogram.fsm.context import FSMContext from states.start_state import StartState from keyboards.start_kb import get_language_keyboard, get_role_keyboard, get_region_keyboard from aiogram.types import ReplyKeyboardMarkup, KeyboardButton

router = Router()

üí¨ /start

@router.message(Command("start")) async def start_bot(message: Message, state: FSMContext): await state.clear() await state.set_state(StartState.language) await message.answer("\U0001F310 –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫:", reply_markup=get_language_keyboard())

\U0001F310 –Ø–∑—ã–∫

@router.callback_query(F.data.startswith("lang_")) async def set_language(callback: CallbackQuery, state: FSMContext): lang = callback.data.split("_")[1] await state.update_data(language=lang) await state.set_state(StartState.role) await callback.message.edit_text("\U0001F464 –ö—Ç–æ –≤—ã?", reply_markup=get_role_keyboard())

\U0001F9D1 –†–æ–ª—å

@router.callback_query(F.data.startswith("role_")) async def set_role(callback: CallbackQuery, state: FSMContext): role = callback.data.split("_")[1] await state.update_data(role=role) await state.update_data(regions=[]) await state.set_state(StartState.regions) await callback.message.edit_text("\U0001F30D –í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–≥–∏–æ–Ω(—ã) –¥–ª—è —Ä–∞–±–æ—Ç—ã:", reply_markup=get_region_keyboard())

\U0001F30D –†–µ–≥–∏–æ–Ω—ã

@router.callback_query(F.data.startswith("region_")) async def set_regions(callback: CallbackQuery, state: FSMContext): region = callback.data.split("_")[1] data = await state.get_data() regions = data.get("regions", [])

if region == "done":
    await state.update_data(regions=regions)
    await state.clear()
    await callback.message.edit_text("\u2705 –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:")

    # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é
    menu_kb = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="\U0001F4DD –°–æ–∑–¥–∞—Ç—å –∞–Ω–∫–µ—Ç—É –≤–æ–¥–∏—Ç–µ–ª—è")],
            [KeyboardButton(text="\U0001F4E6 –î–ª—è –∫–æ–º–ø–∞–Ω–∏–π")],
            [KeyboardButton(text="\U0001F310 –°–º–µ–Ω–∏—Ç—å —è–∑—ã–∫")],
            [KeyboardButton(text="\U0001F4CA –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")],
            [KeyboardButton(text="‚ùå –í—ã–∫–ª—é—á–∏—Ç—å –∞–Ω–∫–µ—Ç—É")],
            [KeyboardButton(text="‚úÖ –í–∫–ª—é—á–∏—Ç—å –∞–Ω–∫–µ—Ç—É (–ø–ª–∞—Ç–Ω–æ)")]
        ],
        resize_keyboard=True
    )
    await callback.message.answer("\U0001F3C1 –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=menu_kb)
else:
    if region in regions:
        regions.remove(region)
    else:
        regions.append(region)
    await state.update_data(regions=regions)
    await callback.message.edit_reply_markup(reply_markup=get_region_keyboard(regions))

