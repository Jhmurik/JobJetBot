from asyncpg import Pool

# üî¢ –ü–æ–¥—Å—á—ë—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –≤–æ–¥–∏—Ç–µ–ª–µ–π
async def count_drivers(pool: Pool) -> int:
    try:
        async with pool.acquire() as conn:
            result = await conn.fetchval("SELECT COUNT(*) FROM drivers")
            return result or 0
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Å—á—ë—Ç–µ –≤–æ–¥–∏—Ç–µ–ª–µ–π: {e}")
        return 0

# üî¢ –ü–æ–¥—Å—á—ë—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∫–æ–º–ø–∞–Ω–∏–π
async def count_companies(pool: Pool) -> int:
    try:
        async with pool.acquire() as conn:
            result = await conn.fetchval("SELECT COUNT(*) FROM companies")
            return result or 0
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Å—á—ë—Ç–µ –∫–æ–º–ø–∞–Ω–∏–π: {e}")
        return 0
