# main.py

import os
from aiohttp import web
from aiogram import Bot, Dispatcher
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.types import (
    BotCommand, BotCommandScopeDefault, MenuButtonCommands
)
from aiogram.webhook.aiohttp_server import setup_application
from aiogram.exceptions import TelegramAPIError # –ù–û–í–û–ï: –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫ API

# ‚úÖ –ò–º–ø–æ—Ä—Ç —Ä–æ—É—Ç–µ—Ä–æ–≤
from handlers.start import router as start_router
from handlers.driver_form import router as driver_form_router
from handlers.stats import router as stats_router

# ‚úÖ –ò–º–ø–æ—Ä—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î
from db import connect_to_db

# üîê –¢–æ–∫–µ–Ω –∏ Webhook
TOKEN = "7883161984:AAF_T1IMahf_EYS42limVzfW-5NGuyNu0Qk"
BASE_WEBHOOK_URL = "https://jobjetbot.onrender.com"
WEBHOOK_PATH = f"/webhook/{TOKEN}"
WEBHOOK_URL = f"{BASE_WEBHOOK_URL.rstrip('/')}{WEBHOOK_PATH}"

# ü§ñ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=TOKEN)
dp = Dispatcher(storage=MemoryStorage())

# ‚úÖ –ü–æ–¥–∫–ª—é—á–∞–µ–º —Ä–æ—É—Ç–µ—Ä—ã
dp.include_router(start_router)
dp.include_router(driver_form_router)
dp.include_router(stats_router)

# üöÄ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–ø—É—Å–∫–∞
async def on_startup(app: web.Application):
    print("üöÄ –ó–∞–ø—É—Å–∫ JobJet AI Bot...")

    # Webhook
    try:
        current_webhook_info = await bot.get_webhook_info()
        print(f"‚ÑπÔ∏è –¢–µ–∫—É—â–∏–π Webhook: {current_webhook_info.url}")

        if current_webhook_info.url != WEBHOOK_URL:
            print(f"üîÑ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–æ–≤–æ–≥–æ Webhook: {WEBHOOK_URL}")
            await bot.set_webhook(WEBHOOK_URL, drop_pending_updates=True) # –ù–û–í–û–ï: drop_pending_updates=True
            print(f"‚úÖ Webhook —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {WEBHOOK_URL}")
        else:
            print("‚úÖ Webhook —É–∂–µ –∞–∫—Ç–∏–≤–µ–Ω –∏ –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω.")

        # –î–æ–±–∞–≤–∏–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É –ø–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
        final_webhook_info = await bot.get_webhook_info()
        print(f"‚úÖ –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ Webhook: {final_webhook_info.url}")
        if final_webhook_info.url != WEBHOOK_URL:
            print("‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: Webhook URL –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç –ø–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏! –í–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ —Å Telegram API.")

    except TelegramAPIError as e:
        print(f"‚ùå –û–®–ò–ë–ö–ê TELEGRAM API –ü–†–ò –£–°–¢–ê–ù–û–í–ö–ï WEBHOOK: {e}")
        # –í—ã –º–æ–∂–µ—Ç–µ —Ä–µ—à–∏—Ç—å, —á—Ç–æ –¥–µ–ª–∞—Ç—å –≤ —ç—Ç–æ–º —Å–ª—É—á–∞–µ: –ª–∏–±–æ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Ä–∞–±–æ—Ç—É –±–µ–∑ webhook,
        # –ª–∏–±–æ –∑–∞–≤–µ—Ä—à–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ, —Ç–∞–∫ –∫–∞–∫ –æ–Ω–æ –Ω–µ —Å–º–æ–∂–µ—Ç –ø–æ–ª—É—á–∞—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è.
        # –î–ª—è –Ω–∞—á–∞–ª–∞ –¥–∞–≤–∞–π—Ç–µ –ø—Ä–æ—Å—Ç–æ –≤—ã–≤–µ–¥–µ–º –æ—à–∏–±–∫—É –∏ –ø—Ä–æ–¥–æ–ª–∂–∏–º.
    except Exception as e:
        print(f"‚ùå –ù–ï–ü–†–ï–î–í–ò–î–ï–ù–ù–ê–Ø –û–®–ò–ë–ö–ê –ü–†–ò –£–°–¢–ê–ù–û–í–ö–ï WEBHOOK: {e}")

    # –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
    try:
        pool = await connect_to_db()
        app["db"] = pool
        print("‚úÖ –ë–∞–∑–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∞")
    except Exception as e:
        print(f"‚ùå –û–®–ò–ë–ö–ê –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–Ø –ö –ë–ê–ó–ï –î–ê–ù–ù–´–•: {e}")
        # –ï—Å–ª–∏ –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∫—Ä–∏—Ç–∏—á–Ω–∞, –º–æ–∂–Ω–æ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–ø—É—Å–∫
        # raise # –î–ª—è –æ—Ç–ª–∞–¥–∫–∏

    # –ö–æ–º–∞–Ω–¥—ã Telegram
    try:
        await bot.set_my_commands([
            BotCommand(command="start", description="–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"),
            BotCommand(command="stats", description="–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É")
        ], scope=BotCommandScopeDefault())
        await bot.set_chat_menu_button(menu_button=MenuButtonCommands())
        print("üìã –ö–æ–º–∞–Ω–¥—ã Telegram —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
    except TelegramAPIError as e:
        print(f"‚ùå –û–®–ò–ë–ö–ê TELEGRAM API –ü–†–ò –£–°–¢–ê–ù–û–í–ö–ï –ö–û–ú–ê–ù–î: {e}")
    except Exception as e:
        print(f"‚ùå –ù–ï–ü–†–ï–î–í–ò–î–ï–ù–ù–ê–Ø –û–®–ò–ë–ö–ê –ü–†–ò –£–°–¢–ê–ù–û–í–ö–ï –ö–û–ú–ê–ù–î: {e}")


# üõë –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
async def on_shutdown(app: web.Application):
    print("üõë –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã JobJet AI Bot...")
    try:
        await bot.delete_webhook(drop_pending_updates=True)
        print("‚úÖ Webhook —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏.")
    except TelegramAPIError as e:
        print(f"‚ùå –û–®–ò–ë–ö–ê TELEGRAM API –ü–†–ò –£–î–ê–õ–ï–ù–ò–ò WEBHOOK: {e}")
    except Exception as e:
        print(f"‚ùå –ù–ï–ü–†–ï–î–í–ò–î–ï–ù–ù–ê–Ø –û–®–ò–ë–ö–ê –ü–†–ò –£–î–ê–õ–ï–ù–ò–ò WEBHOOK: {e}")

    await bot.session.close()
    if "db" in app:
        await app["db"].close()

# üåê –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ aiohttp
def create_app():
    app = web.Application()
    app.on_startup.append(on_startup)
    app.on_shutdown.append(on_shutdown)
    setup_application(app, dp, bot=bot)
    app.router.add_get("/", lambda _: web.Response(text="JobJet AI Bot —Ä–∞–±–æ—Ç–∞–µ—Ç!"))
    return app

# üëü –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞
if __name__ == "__main__":
    print("üëü –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —á–µ—Ä–µ–∑ web.run_app()")
    web.run_app(create_app(), host="0.0.0.0", port=int(os.getenv("PORT", 8000)))

