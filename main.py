import os
from aiohttp import web
from aiogram import Bot, Dispatcher
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.types import (
    BotCommand, BotCommandScopeDefault, MenuButtonCommands
)
from aiogram.webhook.aiohttp_server import setup_application

from handlers.start import router as start_router  # ‚úÖ –¥–æ–±–∞–≤–ª–µ–Ω–æ
from handlers.driver_form import router as driver_form_router
from db import connect_to_db

# üîê –¢–æ–∫–µ–Ω –∏ Webhook
TOKEN = "7883161984:AAF_T1IMahf_EYS42limVzfW-5NGuyNu0Qk"
BASE_WEBHOOK_URL = "https://jobjetbot.onrender.com"
WEBHOOK_PATH = f"/webhook/{TOKEN}"
WEBHOOK_URL = f"{BASE_WEBHOOK_URL.rstrip('/')}{WEBHOOK_PATH}"

# ü§ñ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
bot = Bot(token=TOKEN)
dp = Dispatcher(storage=MemoryStorage())

# üì¶ –ü–æ–¥–∫–ª—é—á–∞–µ–º —Ä–æ—É—Ç–µ—Ä—ã
dp.include_router(start_router)           # ‚úÖ –æ–±—Ä–∞–±–æ—Ç–∫–∞ /start –∏ –º–µ–Ω—é
dp.include_router(driver_form_router)     # ‚úÖ –∞–Ω–∫–µ—Ç–∞ –≤–æ–¥–∏—Ç–µ–ª—è

# üöÄ –ó–∞–ø—É—Å–∫
async def on_startup(app: web.Application):
    print("üöÄ –ó–∞–ø—É—Å–∫ JobJet AI Bot...")

    # Webhook
    webhook_info = await bot.get_webhook_info()
    if webhook_info.url != WEBHOOK_URL:
        await bot.set_webhook(WEBHOOK_URL)
        print(f"üîó Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {WEBHOOK_URL}")
    else:
        print("‚úÖ Webhook —É–∂–µ –∞–∫—Ç–∏–≤–µ–Ω")

    # –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
    pool = await connect_to_db()
    app["db"] = pool
    app["bot"] = bot
    print("‚úÖ –ë–∞–∑–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∞")

    # –ö–æ–º–∞–Ω–¥—ã Telegram
    await bot.set_my_commands([
        BotCommand(command="start", description="–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"),
        BotCommand(command="stats", description="–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É")
    ], scope=BotCommandScopeDefault())
    await bot.set_chat_menu_button(menu_button=MenuButtonCommands())
    print("üìã –ö–æ–º–∞–Ω–¥—ã Telegram —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")

async def on_shutdown(app: web.Application):
    print("üõë –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã JobJet AI Bot...")
    await bot.delete_webhook(drop_pending_updates=True)
    await bot.session.close()
    if "db" in app:
        await app["db"].close()

def create_app():
    app = web.Application()
    app.on_startup.append(on_startup)
    app.on_shutdown.append(on_shutdown)
    setup_application(app, dp, bot=bot)
    app.router.add_get("/", lambda _: web.Response(text="JobJet AI Bot —Ä–∞–±–æ—Ç–∞–µ—Ç!"))
    return app

if __name__ == "__main__":
    print("üëü –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —á–µ—Ä–µ–∑ web.run_app()")
    web.run_app(create_app(), host="0.0.0.0", port=int(os.getenv("PORT", 8000)))
