# handlers/stats.py

from aiogram import Router
from aiogram.types import Message
from aiogram.filters import Command # –î–æ–±–∞–≤–ª—è–µ–º –∏–º–ø–æ—Ä—Ç Command
from utils.stats import count_drivers

router = Router()

# –ò–∑–º–µ–Ω—è–µ–º —Ñ–∏–ª—å—Ç—Ä –Ω–∞ Command("stats")
@router.message(Command("stats"))
async def show_stats_command(message: Message):
    # –õ—É—á—à–µ –ø–æ–ª—É—á–∞—Ç—å pool —á–µ—Ä–µ–∑ DI –∏–ª–∏ —á–µ—Ä–µ–∑ event.bot.get()
    # –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ 'db' –±—ã–ª –ø–µ—Ä–µ–¥–∞–Ω –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç –±–æ—Ç–∞ –∏–ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.
    # –í main.py –≤—ã –¥–µ–ª–∞–ª–∏ app["db"] = pool.
    # –ß—Ç–æ–±—ã aiogram –º–æ–≥ –µ–≥–æ –ø–æ–¥—Ö–≤–∞—Ç–∏—Ç—å, –º–æ–∂–Ω–æ –ª–∏–±–æ:
    # 1. –ü–µ—Ä–µ–¥–∞—Ç—å –µ–≥–æ —á–µ—Ä–µ–∑ `setup_application(app, dp, bot=bot, aiohttp_config={"db": pool_instance})`
    #    –∏ –∑–∞—Ç–µ–º –ø–æ–ª—É—á–∞—Ç—å —á–µ—Ä–µ–∑ `message.bot.get('db')` (—Ö–æ—Ç—è —ç—Ç–æ –Ω–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø—É—Ç—å –¥–ª—è aiohttp app context)
    # 2. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å `dp["db"] = pool` –≤ `on_startup` (–µ—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Ö—Ä–∞–Ω–∏—Ç—å –µ–≥–æ –≤ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–µ)
    #    –∏ –∑–∞—Ç–µ–º –ø–æ–ª—É—á–∞—Ç—å —á–µ—Ä–µ–∑ `message.bot.dispatcher.get("db")`
    # 3. –ò–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å `message.bot.get('db_pool')` –µ—Å–ª–∏ –≤—ã —É—Å—Ç–∞–Ω–æ–≤–∏–ª–∏ –µ–≥–æ –∫–∞–∫ `bot.set('db_pool', pool)`
    # 4. –°–∞–º—ã–π –Ω–∞–¥–µ–∂–Ω—ã–π —Å–ø–æ—Å–æ–±: –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å DI (Dependency Injection) –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ pool –≤ —Ö–µ–Ω–¥–ª–µ—Ä.

    # –î–∞–≤–∞–π—Ç–µ –ø—Ä–µ–¥–ø–æ–ª–æ–∂–∏–º, —á—Ç–æ –≤—ã –∏–∑–º–µ–Ω–∏–ª–∏ main.py, —á—Ç–æ–±—ã pool –±—ã–ª –¥–æ—Å—Ç—É–ø–µ–Ω —á–µ—Ä–µ–∑ message.bot.get("db_pool")
    # –∏–ª–∏ —á—Ç–æ –æ–Ω –¥–æ—Å—Ç—É–ø–µ–Ω —á–µ—Ä–µ–∑ message.bot.get("db") –∫–∞–∫ –≤—ã –∏ –Ω–∞–ø–∏—Å–∞–ª–∏.
    # –ï—Å–ª–∏ –≤—ã –¥–æ–±–∞–≤–∏–ª–∏ –µ–≥–æ –≤ app["db"] –≤ main.py, —Ç–æ aiogram –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏–∫—Ä–µ–ø–ª—è–µ—Ç
    # aiohttp application object –∫ –±–æ—Ç—É, –∏ –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –µ–≥–æ —Ç–∞–∫:
    pool = message.bot.get('__APP__').get("db") # –ü–æ–ª—É—á–∞–µ–º app, –∞ –∏–∑ –Ω–µ–≥–æ —É–∂–µ "db"
    # –ò–ª–∏, –µ—Å–ª–∏ –≤—ã –ø–µ—Ä–µ–¥–∞–≤–∞–ª–∏ –µ–≥–æ –≤ DI:
    # from aiogram.client.bot import Bot
    # async def show_stats_command(message: Message, db_pool: some_db_pool_type): # –ü—Ä–∏–º–µ—Ä —Å DI
    #     total_drivers = await count_drivers(db_pool)

    if not pool:
        await message.answer("‚ùå –û—à–∏–±–∫–∞: –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ.")
        return

    total_drivers = await count_drivers(pool)
    await message.answer(f"üìä –í—Å–µ–≥–æ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ –∞–Ω–∫–µ—Ç: {total_drivers}")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –∫–æ–º–∞–Ω–¥ "—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"
@router.message(F.text.lower() == "—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
async def show_stats_text(message: Message):
    # –ú–æ–∂–Ω–æ –ø—Ä–æ—Å—Ç–æ –≤—ã–∑–≤–∞—Ç—å –æ—Å–Ω–æ–≤–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
    await show_stats_command(message)
