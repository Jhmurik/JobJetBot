from aiogram import Router, F
from aiogram.types import Message
from asyncpg import Pool

from utils.translate import translate_text  # ‚ú® –ü–æ–¥–∫–ª—é—á–∏–º —Å–≤–æ—é —Ñ—É–Ω–∫—Ü–∏—é –ø–µ—Ä–µ–≤–æ–¥–∞

router = Router()

@router.message(F.text.startswith("üì® –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è "))
async def relay_message(message: Message):
    parts = message.text.split(maxsplit=3)
    if len(parts) < 4:
        await message.answer("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ:\nüì® –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è ID_–ü–û–õ–£–ß–ê–¢–ï–õ–Ø –≤–∞—à_—Ç–µ–∫—Å—Ç")
        return

    _, _, target_id_raw, *msg_parts = parts
    target_id = int(target_id_raw)
    user_msg = ' '.join(msg_parts)

    user = message.from_user
    original_text = f"üì© –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç <b>{user.full_name}</b> (ID: <code>{user.id}</code>):\n\n{user_msg}"
    
    # –ü–µ—Ä–µ–≤–æ–¥ —Ç–µ–∫—Å—Ç–∞ (–ø—Ä–∏–º–µ—Ä: —Å —Ä—É—Å—Å–∫–æ–≥–æ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π)
    translated_text = await translate_text(user_msg, source_lang="auto", target_lang="en")
    translated = f"\n\nüåê –ü–µ—Ä–µ–≤–æ–¥:\n{translated_text}"

    try:
        await message.bot.send_message(target_id, original_text + translated, parse_mode="HTML")
        await message.answer("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.")
    except Exception as e:
        await message.answer("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ ID.")
