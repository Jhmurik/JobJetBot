import asyncio
import os
import asyncpg
from aiohttp import web
from aiogram import Bot, Dispatcher, F
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton
from aiogram.filters import Command
from aiogram.webhook.aiohttp_server import SimpleRequestHandler
from contextlib import asynccontextmanager

# –ò–º–ø–æ—Ä—Ç FSM-–º–∞—Ä—à—Ä—É—Ç–æ–≤
from handlers.driver_form import router as driver_form_router

# üîê –¢–æ–∫–µ–Ω –∏ Webhook
TOKEN = "7883161984:AAF_T1IMahf_EYS42limVzfW-5NGuyNu0Qk"
WEBHOOK_PATH = f"/webhook/{TOKEN}"
BASE_WEBHOOK_URL = os.getenv("WEBHOOK_BASE_URL")  # –ü—Ä–∏–º–µ—Ä: https://jobjetbot.onrender.com
WEBHOOK_URL = f"{BASE_WEBHOOK_URL}{WEBHOOK_PATH}"

# üéõÔ∏è –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
bot = Bot(token=TOKEN)
dp = Dispatcher(storage=MemoryStorage())

# üì≤ –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞
start_kb = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="–í–æ–¥–∏—Ç–µ–ª—å")],
        [KeyboardButton(text="–ö–æ–º–ø–∞–Ω–∏—è")]
    ],
    resize_keyboard=True
)

# ‚úÖ –•–µ–Ω–¥–ª–µ—Ä /start —Å –∫–Ω–æ–ø–∫–∞–º–∏
@dp.message(Command("start"))
async def start_handler(message: Message):
    await message.answer(
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, –≤–æ–¥–∏—Ç–µ–ª—å!\n"
        "–ó–¥–µ—Å—å –≤—ã —Å–º–æ–∂–µ—Ç–µ –∑–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É, –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–∞–∫–∞–Ω—Å–∏–∏ –∏ –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ.",
        reply_markup=start_kb
    )

# üì© –†–µ–∑–µ—Ä–≤–Ω—ã–π —Ö–µ–Ω–¥–ª–µ—Ä
@dp.message()
async def echo_handler(message: Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ JobJet –±–æ—Ç. –ù–∞–ø–∏—à–∏ '–∑–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É' –¥–ª—è –Ω–∞—á–∞–ª–∞.")

# üîÑ –ñ–∏–∑–Ω–µ–Ω–Ω—ã–π —Ü–∏–∫–ª
@asynccontextmanager
async def lifespan(app):
    db_url = os.getenv("DATABASE_URL")
    pool = await asyncpg.create_pool(dsn=db_url)
    app["db"] = pool
    yield
    await pool.close()

# üöÄ Webhook lifecycle
async def on_startup(app: web.Application):
    await bot.set_webhook(WEBHOOK_URL)

async def on_shutdown(app: web.Application):
    await bot.delete_webhook()

# üß© –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
def create_app():
    app = web.Application()
    app["bot"] = bot

    app.on_startup.append(on_startup)
    app.on_shutdown.append(on_shutdown)

    dp.include_router(driver_form_router)

    SimpleRequestHandler(dispatcher=dp, bot=bot).register(app, path=WEBHOOK_PATH)
    app.router.add_get("/", lambda _: web.Response(text="JobJet AI Bot —Ä–∞–±–æ—Ç–∞–µ—Ç!"))

    return app

# üîß –ó–∞–ø—É—Å–∫
if __name__ == "__main__":
    web.run_app(create_app(), port=int(os.getenv("PORT", 8000)))
