from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext
from keyboards.start_kb import get_language_keyboard
from utils.i18n import t
from asyncpg import Pool

router = Router()

# üåê –ö–Ω–æ–ø–∫–∞ "–°–º–µ–Ω–∏—Ç—å —è–∑—ã–∫"
@router.message(F.text == "üåê –°–º–µ–Ω–∏—Ç—å —è–∑—ã–∫")
async def change_language(message: Message, state: FSMContext):
    await message.answer("üåç –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫:", reply_markup=get_language_keyboard())

# üîò –í—ã–±–æ—Ä –Ω–æ–≤–æ–≥–æ —è–∑—ã–∫–∞
@router.callback_query(F.data.startswith("lang_"))
async def set_new_language(callback: CallbackQuery, state: FSMContext):
    new_lang = callback.data.split("_")[1]
    user_id = callback.from_user.id
    app = callback.bot._ctx.get("application")
    pool: Pool = app["db"]

    async with pool.acquire() as conn:
        # –ü–æ–ø—ã—Ç–∫–∞ –æ–±–Ω–æ–≤–∏—Ç—å —è–∑—ã–∫ —É –≤–æ–¥–∏—Ç–µ–ª—è
        updated_driver = await conn.execute("UPDATE drivers SET languages = ARRAY[$1] WHERE id = $2", new_lang, user_id)

        # –ï—Å–ª–∏ –Ω–µ –≤–æ–¥–∏—Ç–µ–ª—å, –ø–æ–ø—Ä–æ–±—É–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä–∞
        if updated_driver == "UPDATE 0":
            await conn.execute("UPDATE managers SET languages = ARRAY[$1] WHERE user_id = $2", new_lang, user_id)

    await callback.message.edit_text(t(new_lang, "language_changed_successfully"))
    await state.clear()
